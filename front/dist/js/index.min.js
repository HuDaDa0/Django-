function Banner(){this.bannerGroup=$("#banner-group"),this.index=0,this.bannerUl=$("#banner-ul"),this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.pageControl=$(".page-control")}function Index(){this.p=2,this.category_id=0,this.loadBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(t){var e=new Date(t),n=e.getTime(),i=((new Date).getTime()-n)/1e3;return i<60?"刚刚":60<i&&i<3600?parseInt(i/60)+"分钟前":3600<i&&i<86400?parseInt(i/60/60)+"小时前":86400<i&&i<2592e3?parseInt(i/60/60/24)+"天前":e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+" "+e.getHours()+":"+data.getMinutes()}}Banner.prototype.listenArrowClick=function(){var t=this;this.leftArrow.click(function(){0===t.index?t.index=3:t.index--,t.bannerUl.animate({left:-795*t.index},500)}),this.rightArrow.click(function(){3===t.index?t.index=1:t.index++,t.bannerUl.animate({left:-795*t.index},500)})},Banner.prototype.toggleArrow=function(t){t?(this.leftArrow.show(),this.rightArrow.show()):(this.leftArrow.hide(),this.rightArrow.hide())},Banner.prototype.loop=function(){var t=this;this.timer=setInterval(function(){3<=t.index?t.index=0:t.index++,t.bannerUl.animate({left:-795*t.index},500),t.pageControl.children("li").eq(t.index).addClass("active").siblings().removeClass("active")},2e3)},Banner.prototype.run=function(){this.loop()},Banner.prototype.listenBannerHover=function(){var t=this;this.bannerGroup.hover(function(){clearInterval(t.timer),t.toggleArrow(!0)},function(){t.loop(),t.toggleArrow(!1)})},Banner.prototype.listenPageControl=function(){var n=this;this.pageControl.children("li").each(function(t,e){$(e).click(function(){n.index=t,n.bannerUl.animate({left:-795*n.index},1e3),$(e).addClass("active").siblings().removeClass("active")})})},Index.prototype.listenLoadMoreEvent=function(){var i=this;this.loadBtn.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.p,category_id:i.category_id},success:function(t){if(200===t.code){var e=t.data;if(0<e.length){var n=template("news-item",{newses:e});$(".list-inner-group").append(n),i.p+=1}else i.loadBtn.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this).attr("data-category");xfzajax.get({url:"/news/list/",data:{p:1,category_id:r},success:function(t){if(200===t.code){var e=t.data,n=template("news-item",{newses:e}),i=$(".list-inner-group");i.empty(),i.append(n),o.category_id=r,o.p=2,o.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){var t=new Banner;t.run(),t.listenBannerHover(),t.listenArrowClick(),t.listenPageControl(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
